name: DevSecOps Pipeline

permissions: {}

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        description: The directory where the Dockerfile is located.
        required: false
        default: .


      package-test-path:
        type: string
        description: The path to the package to test.
        required: false
        default: .

      temp-registry:
        description: OCI registry to store image before tests
        type: string
        required: true

      deployment:
        description: Path to the deployment manifest
        type: string
        required: true

    secrets:
      intermediary-registry-username:
        description: Username for the intermediary registry
        required: true

      intermediary-registry-password:
        description: Password for the intermediary registry
        required: true

      kubeconfig:
        description: Content of the kubeconfig file
        required: true

jobs:
  sast:
    permissions:
      contents: read
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/sast.yml@main

  test:
    permissions:
      contents: read
      actions: read
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/unit-test.yml@main
    with:
      path: ${{ inputs.package-test-path }}

  build:
    permissions:
      contents: read
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/build.yml@main
    with:
      registry: ${{ inputs.temp-registry }}
      image-name: ${{ github.repository }}
    secrets:
      username: ${{ secrets.intermediary-registry-username }}
      password: ${{ secrets.intermediary-registry-password }}

  sbom:
    needs: [build]
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/sbom.yml@main
    with:
      registry: ${{ inputs.temp-registry }}
      image: ${{ needs.build.outputs.image-name }}
      digest: ${{ needs.build.outputs.digest }}
    secrets:
      username: ${{ secrets.intermediary-registry-username }}
      password: ${{ secrets.intermediary-registry-password }}

  vulnerability-scan:
    needs: [build]
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/vuln.yml@main
    with:
      registry: ${{ inputs.temp-registry }}
      image-name: ${{ needs.build.outputs.image-name }}
      digest: ${{ needs.build.outputs.digest }}
      threshold: high
    secrets:
      username: ${{ secrets.intermediary-registry-username }}
      password: ${{ secrets.intermediary-registry-password }}

  publish:
    permissions:
      contents: read
      packages: write
    needs: [build, vulnerability-scan, sbom]
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/release.yml@main
    with:
      temp-registry: ${{ inputs.temp-registry }}
      final-registry: ghcr.io
      image-name: ${{ needs.build.outputs.image-name }}
      digest: ${{ needs.build.outputs.digest }}
    secrets:
      temp-username: ${{ secrets.intermediary-registry-username }}
      temp-password: ${{ secrets.intermediary-registry-password }}
      final-username: ${{ github.actor }}
      final-password: ${{ secrets.GITHUB_TOKEN }}

  attestations:
    permissions:
      contents: read
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: [build, sbom, vulnerability-scan, publish]
    steps:
      - uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@main
        with:
          name: cyclonedx.json
          path: cyclonedx.json
          sha256: ${{ needs.sbom.outputs.sha256 }}
      - uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@main
        with:
          name: vuln-scan.json
          path: vuln-scan.json
          sha256: ${{ needs.vulnerability-scan.outputs.sha256 }}
      - uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
      - uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: sigstore/cosign-installer@v3.1.2
      - run: |
          docker buildx imagetools inspect "ghcr.io/${{ needs.build.outputs.image-name }}@${{ needs.build.outputs.digest }}" --format "{{ json .Provenance.SLSA }}" > slsa.json
          cat slsa.json
          cosign attest -y --predicate cyclonedx.json --type cyclonedx "ghcr.io/${{ needs.build.outputs.image-name }}@${{ needs.build.outputs.digest }}"
          cosign attest -y --predicate vuln-scan.json --type vuln "ghcr.io/${{ needs.build.outputs.image-name }}@${{ needs.build.outputs.digest }}"
          
  deploy:
    needs: [attestations, build]
    permissions:
      contents: read
    uses: httpcarlxs/ssip-trusted-pipeline/.github/workflows/deploy.yml@main
    with:
      deployment: ${{ inputs.deployment }}
      image: "ghcr.io/${{ needs.build.outputs.image-name }}@${{ needs.build.outputs.digest }}"
    secrets:
      kubeconfig: ${{ secrets.kubeconfig }}
      password: ${{ secrets.GITHUB_TOKEN }}
      username: ${{ github.actor }}
