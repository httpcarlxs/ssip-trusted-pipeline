name: Build Image

permissions: {}

on:
  workflow_call:
    inputs:
      dockerfile-directory:
        type: string
        description: Directory where the Dockerfile is located
        required: false
        default: .

      registry:
        type: string
        description: Temporary OCI registry to store the image before testing
        required: true

      image-name:
        type: string
        description: Name of the image to build
        required: true

    outputs:
      image-name:
        value: ${{ jobs.build.outputs.image-name }}
      digest:
        value: ${{ jobs.build.outputs.digest }}
      tags:
        value: ${{ jobs.build.outputs.tags }}

    secrets:
      username:
        description: Temporary registry username
        required: true

      password:
        description: Temporary registry password
        required: true

env:
  IMAGE_NAME: ${{ inputs.image-name }}
  IMAGE_REGISTRY: ${{ inputs.registry }}

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.image.outputs.image-name }}
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
      - uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
      - id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}

      - name: Output image
        id: image
        run: |
          # NOTE: Set the image as an output because the `env` context is not
          # available to the inputs of a reusable workflow call.
          image_name="${IMAGE_NAME}"
          # Convert image_name to lower case
          image_name=$(echo "$image_name" | tr '[:upper:]' '[:lower:]')
          echo "image-name=$image_name" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ${{ inputs.dockerfile-directory }}
          build-args: |
            go_version=1.23.6
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          push: true
          provenance: mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
